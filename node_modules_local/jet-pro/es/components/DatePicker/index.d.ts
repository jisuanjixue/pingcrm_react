import type {
  PickerBaseProps,
  PickerDateProps,
  PickerTimeProps,
  RangePickerBaseProps,
  RangePickerDateProps,
  RangePickerTimeProps,
} from 'antd/lib/date-picker/generatePicker';
import { Dayjs } from 'dayjs';
import React from 'react';
type exinlude = 'value' | 'onChange';
export type DatePickerProps = {
  /**
   * 【jet-pro】扩展基础组件的value，增加string的支持
   */
  value?: Dayjs | string | null;
  /**
   * 【jet-pro】和原始函数调换了输出参数顺序
   */
  onChange?: (value: string, date: Dayjs | null) => void;
} & (
  | Omit<PickerBaseProps<Dayjs>, exinlude>
  | Omit<PickerDateProps<Dayjs>, exinlude>
  | Omit<PickerTimeProps<Dayjs>, exinlude>
);
declare const DatePickerComponent: ({
  value,
  onChange,
  ...props
}: DatePickerProps) => React.JSX.Element;
export type RangePickerProps = (
  | Omit<RangePickerBaseProps<Dayjs>, exinlude>
  | Omit<RangePickerDateProps<Dayjs>, exinlude>
  | Omit<RangePickerTimeProps<Dayjs>, exinlude>
) & {
  /**
   * 【jet-pro】扩展基础组件的value，增加string的支持
   */
  value?: [Dayjs | string | null, Dayjs | string | null];
  /**
   * 【jet-pro】和原始函数调换了输出参数顺序
   */
  onChange?: (value: [string, string], date: [Dayjs | null, Dayjs | null] | null) => void;
};
type TDatePicker = typeof DatePickerComponent & {
  RangePicker: (props: RangePickerProps) => JSX.Element;
};
/**
 * DatePicker
 * 较基础组件变动：
 *  value增加对string的支持
 *  onChange中两个参数顺序调换
 */
declare const DatePicker: TDatePicker;
export default DatePicker;
