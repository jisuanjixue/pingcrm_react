import type { ButtonProps } from 'antd/es/button';
import type { Rule } from 'antd/lib/form';
import type { MutableRefObject, ReactNode } from 'react';
import type { IResponse, IResponseData } from '../../../dataTypes/response';
import type { IDrawerOrModalFormProps } from '../../EditForm/interface';
import type { IProToolbarProps, TBaseView, TProToolbarAction } from '../ProTable/interface';
import type {
  IQueryColumnGroupType,
  IQueryColumnType,
  IQueryTableAction,
  IQueryTableProps,
} from '../QueryTable/interface';

export interface ICRUDColumnType<TListView extends TBaseView, TDetailView extends TBaseView>
  extends IQueryColumnType<TListView> {
  /** 【jet-pro】是否在编辑表单中隐藏，住隐藏将不渲染此表单项 */
  hideInEdit?: boolean;
  /** 【jet-pro】表单项配置 */
  editProps?: {
    /** 【jet-pro】name值 */
    name?: string;
    /** 【jet-pro】是否必填（将自动加入rules，所以rules中不须再有必填验证），如果是string类型，则为必填的message， */
    required?: boolean | string;
    /** 【jet-pro】验证规则 */
    rules?: Rule[];
    /** 【jet-pro】render */
    render?: (
      forItemProps: {
        label?: ReactNode;
        name?: string;
        required?: boolean | string;
        rules?: Rule[];
      },
      item?: TDetailView,
    ) => JSX.Element;
    /**
     * 【jet-pro】额外项的render
     */
    renderExtra?: (item?: TDetailView) => JSX.Element;
  };
}

export interface ICRUDColumnGroupType<TListView extends TBaseView, TDetailView extends TBaseView>
  extends IQueryColumnGroupType<TListView> {
  children?: TCRUDColumnsType<TListView, TDetailView>;
}

export type TCRUDColumnType<TListView extends TBaseView, TDetailView extends TBaseView> =
  | ICRUDColumnType<TListView, TDetailView>
  | ICRUDColumnGroupType<TListView, TDetailView>;

export type TCRUDColumnsType<
  TListView extends TBaseView,
  TDetailView extends TBaseView,
> = TCRUDColumnType<TListView, TDetailView>[];

export type TCRUDTableToolbarAction = TProToolbarAction | 'add';
export interface ICRUDTableToolbarProps extends Omit<IProToolbarProps, 'hideActions'> {
  /**
   * 【jet-pro】新增按钮配置
   */
  createButtonProps?: ButtonProps;
  /**
   * 【jet-pro】需要隐藏的功能
   */
  hideActions?: TCRUDTableToolbarAction[];
}

export interface ICRUDEditProps<TDetailView extends TBaseView> {
  title?: { create?: string; update?: string; subfix?: string };
  showable: (detail?: TDetailView) => boolean;
}

export interface IEditProps<TDetailView, TSaveView = TDetailView>
  extends IDrawerOrModalFormProps<TDetailView, TSaveView> {
  disabled?: boolean;
  /**
   * 【jet-pro】弹出表单行驶
   * 对话框'modal'或抽屉'drawer'，默认是'drawer'
   */
  mode?: 'drawer' | 'modal';

  /**
   * 【jet-pro】整个表单的render
   * 会被renderCreate和renderUpdate覆盖（如果指定）
   */
  render?: (detail?: TDetailView) => ReactNode;
  /**
   * 【jet-pro】渲染表单前数据转换函数
   * @param {TDetailView} detail 初始化数据
   * @returns {Promise<TDetailView>} 转换后的数据
   */
  transFormDataBeforeRender?: (detail?: TDetailView) => Promise<TDetailView | undefined>;

  /**
   * 【jet-pro】提交表单前数据转换函数
   * @param {TSaveView} data 表单数据
   * @returns {Promise<TSaveView>} 处理后的数据
   */
  transFormDataBeforeSubmit?: (data: TSaveView) => Promise<TSaveView>;
  /**
   * 【jet-pro】在现有的表单项后面追加额外表单项
   */
  renderExtra?: () => ReactNode;
}

export interface ICRUDTableProps<
  TListView extends TBaseView,
  TDetailView extends TBaseView,
  TSaveView extends TBaseView = TDetailView,
> extends Omit<IQueryTableProps<TListView>, 'toolbarProps' | 'refAction'> {
  /**
   * 【jet-pro】引用内部的一些函数
   */
  refAction?:
    | MutableRefObject<TCRUDTableAction<TDetailView>>
    | ((action: TCRUDTableAction<TDetailView>) => void);
  columns: TCRUDColumnsType<TListView, TDetailView>;
  toolbarProps?: ICRUDTableToolbarProps;
  detailRequest?: (id: string | undefined) => Promise<IResponseData<TDetailView>>;
  saveRequest?: (data: TSaveView) => Promise<IResponse | IResponseData<TDetailView>>;
  /**
   * 【jet-pro】表单配置
   */
  editProps?: IEditProps<TDetailView, TSaveView>;
}

export interface ICRUDTableAction<T> extends IQueryTableAction {
  showEdit: (detail: T) => void;
  hideEdit: () => void;
}

export type TCRUDTableAction<T> = ICRUDTableAction<T> | undefined;
