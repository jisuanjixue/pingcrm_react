function _slicedToArray(arr, i) {
  return (
    _arrayWithHoles(arr) ||
    _iterableToArrayLimit(arr, i) ||
    _unsupportedIterableToArray(arr, i) ||
    _nonIterableRest()
  );
}
function _nonIterableRest() {
  throw new TypeError(
    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
  );
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === 'Object' && o.constructor) n = o.constructor.name;
  if (n === 'Map' || n === 'Set') return Array.from(o);
  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i =
    null == arr
      ? null
      : ('undefined' != typeof Symbol && arr[Symbol.iterator]) || arr['@@iterator'];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (((_x = (_i = _i.call(arr)).next), 0 === i)) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else
        for (
          ;
          !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i);
          _n = !0
        );
    } catch (err) {
      (_d = !0), (_e = err);
    } finally {
      try {
        if (!_n && null != _i.return && ((_r = _i.return()), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
import { ColumnHeightOutlined } from '@ant-design/icons';
import { useSafeState } from 'ahooks';
import { Button, Dropdown, Menu, Tooltip } from 'antd';
import React from 'react';
export default (function (_ref) {
  var defaultSize = _ref.defaultSize;
  var _useSafeState = useSafeState(defaultSize || 'middle'),
    _useSafeState2 = _slicedToArray(_useSafeState, 2),
    size = _useSafeState2[0],
    setSize = _useSafeState2[1];
  var Density = /*#__PURE__*/ React.createElement(
    Dropdown,
    {
      trigger: ['click'],
      placement: 'bottomRight',
      arrow: true,
      overlay: /*#__PURE__*/ React.createElement(
        Menu,
        {
          selectable: true,
          selectedKeys: [size],
          style: {
            minWidth: 100,
          },
          onClick: function onClick(_ref2) {
            var key = _ref2.key;
            return setSize(key);
          },
        },
        [
          {
            size: 'large',
            title: '默认',
          },
          {
            size: 'middle',
            title: '中等',
          },
          {
            size: 'small',
            title: '紧凑',
          },
        ].map(function (item) {
          return /*#__PURE__*/ React.createElement(
            Menu.Item,
            {
              key: item.size,
            },
            item.title,
          );
        }),
      ),
    },
    /*#__PURE__*/ React.createElement(
      Tooltip,
      {
        overlay: '\u5BC6\u5EA6',
      },
      /*#__PURE__*/ React.createElement(Button, {
        icon: /*#__PURE__*/ React.createElement(ColumnHeightOutlined, null),
        style: {
          border: 'none',
        },
      }),
    ),
  );
  return {
    size: size,
    Density: Density,
  };
});
