import ProForm, { QueryFilter } from '@ant-design/pro-form';
import React from 'react';
import { convertToFilters } from './utils';
export default (function (_ref) {
  var loading = _ref.loading,
    form = _ref.form,
    children = _ref.children,
    onSearch = _ref.onSearch;
  var fm = form || ProForm.useForm()[0];
  var searchHandler = function searchHandler(formValue) {
    var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return (
      (onSearch === null || onSearch === void 0
        ? void 0
        : onSearch(convertToFilters(formValue), isReset)) || Promise.resolve()
    );
  };
  return /*#__PURE__*/ React.createElement(
    QueryFilter,
    {
      form: fm,
      onReset: function onReset() {
        fm.resetFields();
        searchHandler(fm.getFieldsValue(), true);
      },
      submitter: {
        resetButtonProps: {
          loading: loading,
        },
        submitButtonProps: {
          loading: loading,
        },
      },
      onKeyPress: function onKeyPress(_ref2) {
        var key = _ref2.key;
        if (key !== 'Enter' || loading) return;
        searchHandler(fm.getFieldsValue());
      },
      onFinish: searchHandler,
    },
    children,
  );
});
