import ProForm from '@ant-design/pro-form';
import { Input, InputNumber } from 'antd';
import React from 'react';
import { FilterType } from '../../../../dataTypes/dynamicQuery/enums';
import { FilterAndHidden, FilterTypeSelect } from './FilterExtras';

/**
 * number类型的FilterItem
 * @param param0
 * @returns
 */
var Number = function Number(_ref) {
  var name = _ref.name,
    label = _ref.label,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? FilterType.Equal : _ref$type,
    defaultValue = _ref.defaultValue,
    _ref$showFilterType = _ref.showFilterType,
    showFilterType = _ref$showFilterType === void 0 ? true : _ref$showFilterType,
    and = _ref.and;
  return /*#__PURE__*/ React.createElement(
    React.Fragment,
    null,
    /*#__PURE__*/ React.createElement(
      ProForm.Item,
      {
        name: name,
        label: label,
      },
      /*#__PURE__*/ React.createElement(
        Input.Group,
        {
          compact: true,
        },
        /*#__PURE__*/ React.createElement(FilterTypeSelect, {
          name: name,
          defaultType: type,
          types: [
            FilterType.Equal,
            FilterType.NotEqual,
            FilterType.GreaterThan,
            FilterType.GreaterThanOrEqual,
            FilterType.LessThan,
            FilterType.LessThanOrEqual,
          ],
          showFilterType: showFilterType,
          style: {
            width: 100,
          },
        }),
        /*#__PURE__*/ React.createElement(
          ProForm.Item,
          {
            noStyle: true,
            name: [name, 'value'],
            initialValue: defaultValue,
          },
          /*#__PURE__*/ React.createElement(InputNumber, {
            placeholder: '\u8BF7\u8F93\u5165'.concat(label),
            style: {
              width: showFilterType ? 'calc(100% - 100px)' : '100%',
            },
          }),
        ),
      ),
    ),
    /*#__PURE__*/ React.createElement(FilterAndHidden, {
      name: name,
      and: and,
    }),
  );
};
export default Number;
