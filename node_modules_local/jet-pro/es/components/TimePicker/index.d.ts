import type {
  TimePickerProps as ATimePickerProps,
  TimeRangePickerProps as ATimeRangePickerProps,
} from 'antd/lib/time-picker';
import type { Dayjs } from 'Dayjs';
import React from 'react';
type exinlude = 'value' | 'onChange';
export type TimePickerProps = Omit<ATimePickerProps, exinlude> & {
  /**
   * 【jet-pro】扩展基础组件的value，增加string的支持
   */
  value?: Dayjs | string | null;
  /**
   * 【jet-pro】和原始函数调换了输出参数顺序
   */
  onChange?: (value: string, date: Dayjs | null) => void;
};
declare const TimePickerComponent: ({
  value,
  onChange,
  ...props
}: TimePickerProps) => React.JSX.Element;
export type RangePickerProps = Omit<ATimeRangePickerProps, exinlude> & {
  /**
   * 【jet-pro】扩展基础组件的value，增加string的支持
   */
  value?: [Dayjs | string | null, Dayjs | string | null];
  /**
   * 【jet-pro】和原始函数调换了输出参数顺序
   */
  onChange?: (value: [string, string], date: [Dayjs | null, Dayjs | null] | null) => void;
};
type TTimePicker = typeof TimePickerComponent & {
  /**
   * TimePicker.RangePicker
   * 较基础组件变动：同TimePicker
   */
  RangePicker: (props: RangePickerProps) => JSX.Element;
};
/**
 * TimePicker
 * 较基础组件变动：
 *  value增加对string的支持
 *  onChange中两个参数顺序调换
 */
declare const TimePicker: TTimePicker;
export default TimePicker;
