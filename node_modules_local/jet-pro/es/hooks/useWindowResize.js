function _slicedToArray(arr, i) {
  return (
    _arrayWithHoles(arr) ||
    _iterableToArrayLimit(arr, i) ||
    _unsupportedIterableToArray(arr, i) ||
    _nonIterableRest()
  );
}
function _nonIterableRest() {
  throw new TypeError(
    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
  );
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === 'Object' && o.constructor) n = o.constructor.name;
  if (n === 'Map' || n === 'Set') return Array.from(o);
  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i =
    null == arr
      ? null
      : ('undefined' != typeof Symbol && arr[Symbol.iterator]) || arr['@@iterator'];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (((_x = (_i = _i.call(arr)).next), 0 === i)) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else
        for (
          ;
          !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i);
          _n = !0
        );
    } catch (err) {
      (_d = !0), (_e = err);
    } finally {
      try {
        if (!_n && null != _i.return && ((_r = _i.return()), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
import { useSafeState, useThrottleFn } from 'ahooks';
import useMountUnmount from './useMountUnmount';
/**
 * 截流监听window变化
 * @param wait 截流时间（默认500毫秒）
 * @returns IWindowSize window高宽
 */
export default (function () {
  var wait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;
  var _useSafeState = useSafeState({}),
    _useSafeState2 = _slicedToArray(_useSafeState, 2),
    size = _useSafeState2[0],
    setSize = _useSafeState2[1];
  var onResize = function onResize() {
    var _window = window,
      innerWidth = _window.innerWidth,
      innerHeight = _window.innerHeight;
    setSize({
      width: innerWidth,
      height: innerHeight,
    });
  };
  var throttleResize = useThrottleFn(onResize, {
    wait: wait,
  });
  useMountUnmount({
    mount: function mount() {
      onResize();
      window.addEventListener('resize', throttleResize.run);
    },
    unmount: function unmount() {
      throttleResize.flush();
      throttleResize.cancel();
      window.removeEventListener('resize', throttleResize.run);
    },
  });
  return size;
});
