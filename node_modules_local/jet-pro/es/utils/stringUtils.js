import { isNumber } from './numberUtils';

/**
 * 字符串有效判断
 * @param value
 * @returns
 */
var isNullOrEmpty = function isNullOrEmpty(value) {
  return [undefined, null, ''].some(function (val) {
    return val === value;
  });
};

/**
 * number左补位
 * @param num
 * @param len 总长度
 * @returns
 */
var padLeft = function padLeft(num, len) {
  if (!isNumber(num) || !isNumber(len)) return undefined;
  return (Array(len).join('0') + num).slice(-len);
};

/**
 *
 * @param required
 * @param has
 * @returns
 */
var hasPermission = function hasPermission(required, has) {
  var _hasPs;
  var requiredPs = [];
  var hasPs = [];
  if (required) {
    if (typeof required === 'string') requiredPs = [required];
    else requiredPs = required;
  }
  if (has) {
    if (typeof has === 'string') hasPs = [has];
    else hasPs = has;
  }
  return requiredPs.length
    ? (_hasPs = hasPs) === null || _hasPs === void 0
      ? void 0
      : _hasPs.some(function (hp) {
          return requiredPs.some(function (rp) {
            return rp === hp;
          });
        })
    : true;
};
export { isNullOrEmpty, padLeft, hasPermission };
