var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod,
  )
);
var __toCommonJS = (mod) => __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// src/components/Cascader/index.tsx
var Cascader_exports = {};
__export(Cascader_exports, {
  default: () => Cascader_default,
});
module.exports = __toCommonJS(Cascader_exports);
var import_icons = require('@ant-design/icons');
var import_antd = require('antd');
var import_react = __toESM(require('react'));
var import_ahooks = require('ahooks');
var import_objectUtils = require('../../utils/objectUtils');
var import_useMountUnmount = __toESM(require('../../hooks/useMountUnmount'));
var Cascader_default = ({ options: propsOptions, request: propsRequest, ...props }) => {
  const [loading, setLoading] = (0, import_ahooks.useSafeState)();
  const [options, setOptions] = (0, import_ahooks.useSafeState)();
  const [value, setValue] = (0, import_ahooks.useSafeState)();
  const [, setForceRender] = (0, import_ahooks.useSafeState)();
  const refOptionsFlattened = (0, import_react.useRef)();
  const isControlled = (0, import_objectUtils.hasKey)(props, 'value');
  const getValue = () => (isControlled ? props.value : value);
  const fetchRequest = async () => {
    if (!propsRequest) return;
    setLoading(true);
    try {
      setOptions(await (propsRequest == null ? void 0 : propsRequest()));
    } catch (e) {}
    setLoading(false);
  };
  const flatOptions = (0, import_react.useCallback)((opts, parent) => {
    const optionsFlattened = [];
    opts == null
      ? void 0
      : opts.forEach((item) => {
          var _a;
          if ((_a = item.children) == null ? void 0 : _a.length) {
            optionsFlattened.push(...flatOptions(item.children, item));
          }
          const itemWithParent = item;
          itemWithParent.parent = parent;
          optionsFlattened.push(itemWithParent);
        });
    return optionsFlattened;
  }, []);
  const getValuesReverse = (val) => {
    var _a;
    const option =
      (_a = refOptionsFlattened.current) == null ? void 0 : _a.find((item) => item.value === val);
    if (!option) return [];
    let values = [];
    values.push(option.value);
    if (option.parent) values = [...values, ...getValuesReverse(option.parent.value)];
    return values;
  };
  const getValues = (val) => {
    const values = getValuesReverse(val).reverse();
    if (!values.length) return void 0;
    return values;
  };
  const onChange = (values, selectedOptions) => {
    var _a;
    const val = values == null ? void 0 : values[(values == null ? void 0 : values.length) - 1];
    if (!isControlled) setValue(val);
    (_a = props.onChange) == null
      ? void 0
      : _a.call(
          props,
          val,
          selectedOptions == null
            ? void 0
            : selectedOptions[(selectedOptions == null ? void 0 : selectedOptions.length) - 1],
        );
  };
  (0, import_react.useEffect)(() => {
    setOptions(propsOptions);
  }, [propsOptions]);
  (0, import_react.useEffect)(() => {
    refOptionsFlattened.current = flatOptions(options);
    setForceRender(/* @__PURE__ */ new Date().getTime());
  }, [flatOptions, options]);
  (0, import_useMountUnmount.default)({
    mount: () => {
      fetchRequest();
      if (props.refAction) props.refAction.current = { refresh: fetchRequest };
    },
  });
  return /* @__PURE__ */ import_react.default.createElement(
    import_antd.Input.Group,
    { compact: true, style: { display: 'flex' } },
    /* @__PURE__ */ import_react.default.createElement(import_antd.Cascader, {
      changeOnSelect: true,
      allowClear: true,
      ...{
        expandTrigger: 'hover',
        showSearch: {
          filter: (inputValue, path) =>
            path.some(
              (item) =>
                item.label
                  .toLowerCase()
                  .indexOf(inputValue == null ? void 0 : inputValue.toLowerCase()) > -1,
            ),
        },
        placeholder: '请选择',
        notFoundContent: /* @__PURE__ */ import_react.default.createElement(
          import_antd.Empty,
          null,
        ),
        ...props,
        style: { ...props.style, flexDirection: 'column' },
        options,
        value: getValues(getValue()),
        onChange: (items, opts) => onChange(items, opts),
      },
    }),
    propsRequest &&
      /* @__PURE__ */ import_react.default.createElement(import_antd.Button, {
        loading,
        icon: /* @__PURE__ */ import_react.default.createElement(import_icons.ReloadOutlined, null),
        onClick: fetchRequest,
      }),
  );
};
