var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod,
  )
);
var __toCommonJS = (mod) => __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// src/components/EditForm/DrawerForm.tsx
var DrawerForm_exports = {};
__export(DrawerForm_exports, {
  default: () => DrawerForm_default,
});
module.exports = __toCommonJS(DrawerForm_exports);
var import_ahooks = require('ahooks');
var import_antd = require('antd');
var import_react = __toESM(require('react'));
var import_EditForm = __toESM(require('./EditForm'));
var DrawerForm = ({
  drawerProps,
  visible,
  title = '抽屉表单',
  width = 800,
  footerProps,
  footer,
  footerExtra,
  initDetail,
  onClose,
  onSubmit,
  children,
  ...props
}) => {
  const refForm = (0, import_react.useRef)();
  const getRefForm = () => props.refForm || refForm;
  const [loadingSubmit, setLoadingSubmit] = (0, import_ahooks.useSafeState)();
  const submit = async (e) => {
    var _a;
    try {
      const values = await ((_a = getRefForm().current) == null ? void 0 : _a.validateFields());
      setLoadingSubmit(true);
      if (await (onSubmit == null ? void 0 : onSubmit(values))) {
        onClose == null ? void 0 : onClose(e);
      }
      setLoadingSubmit(false);
    } catch (err) {
      setLoadingSubmit(false);
    }
  };
  const Footer = () => {
    var _a, _b, _c;
    if (footer)
      return /* @__PURE__ */ import_react.default.createElement(
        import_react.default.Fragment,
        null,
        footer,
      );
    return /* @__PURE__ */ import_react.default.createElement(
      import_antd.Space,
      null,
      /* @__PURE__ */ import_react.default.createElement(
        import_antd.Button,
        {
          loading: loadingSubmit,
          onClick: onClose,
          ...(footerProps == null ? void 0 : footerProps.cancelProps),
        },
        ((_a = footerProps == null ? void 0 : footerProps.cancelProps) == null
          ? void 0
          : _a.text) || '取消',
      ),
      /* @__PURE__ */ import_react.default.createElement(import_antd.Divider, { type: 'vertical' }),
      /* @__PURE__ */ import_react.default.createElement(
        import_antd.Button,
        {
          loading: loadingSubmit,
          onClick: () => {
            var _a2, _b2;
            return (_b2 = (_a2 = getRefForm().current) == null ? void 0 : _a2.resetFields) == null
              ? void 0
              : _b2.call(_a2);
          },
          ...(footerProps == null ? void 0 : footerProps.resetProps),
        },
        ((_b = footerProps == null ? void 0 : footerProps.resetProps) == null ? void 0 : _b.text) ||
          '重置',
      ),
      /* @__PURE__ */ import_react.default.createElement(
        import_antd.Button,
        {
          type: 'primary',
          loading: loadingSubmit,
          onClick: (e) => submit(e),
          ...(footerProps == null ? void 0 : footerProps.submitProps),
        },
        ((_c = footerProps == null ? void 0 : footerProps.submitProps) == null
          ? void 0
          : _c.text) || '确定',
      ),
      footerExtra,
    );
  };
  return /* @__PURE__ */ import_react.default.createElement(
    import_antd.Drawer,
    {
      destroyOnClose: true,
      maskClosable: false,
      ...{ ...drawerProps, visible, title, width, onClose },
      onClose: (e) => (onClose == null ? void 0 : onClose(e)),
      footer: /* @__PURE__ */ import_react.default.createElement(Footer, null),
    },
    visible &&
      /* @__PURE__ */ import_react.default.createElement(
        import_EditForm.default,
        {
          ...{
            initDetail,
            footer: /* @__PURE__ */ import_react.default.createElement(
              import_react.default.Fragment,
              null,
            ),
            refForm: getRefForm(),
            ...props,
          },
        },
        children,
      ),
  );
};
var DrawerForm_default = DrawerForm;
