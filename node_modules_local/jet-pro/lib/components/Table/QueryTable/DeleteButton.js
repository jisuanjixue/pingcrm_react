var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod,
  )
);
var __toCommonJS = (mod) => __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// src/components/Table/QueryTable/DeleteButton.tsx
var DeleteButton_exports = {};
__export(DeleteButton_exports, {
  default: () => DeleteButton_default,
});
module.exports = __toCommonJS(DeleteButton_exports);
var import_antd = require('antd');
var import_react = __toESM(require('react'));
var import_ahooks = require('ahooks');
var import_asyncUtils = require('../../../utils/asyncUtils');
var DeleteButton_default = ({ id, deleteRequest, onResult }) => {
  if (!deleteRequest)
    return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null);
  const [loading, setLoading] = (0, import_ahooks.useSafeState)();
  const onDeleteConfirm = async () => {
    if (!id) return;
    setLoading(true);
    await (0, import_asyncUtils.delay)(1e3);
    try {
      const res = await deleteRequest(id);
      onResult == null ? void 0 : onResult(res);
      if (!res.success) {
        import_antd.message.error(res.errorMessage);
      } else {
        import_antd.message.success('删除成功');
      }
    } catch (e) {
      const errorMessage = e.message || '出错了';
      onResult == null ? void 0 : onResult({ success: false, errorMessage });
      import_antd.message.error(errorMessage);
    }
    setLoading(false);
  };
  return /* @__PURE__ */ import_react.default.createElement(
    import_antd.Popconfirm,
    { title: '是否确定删除？', onConfirm: () => onDeleteConfirm() },
    /* @__PURE__ */ import_react.default.createElement(
      import_antd.Button,
      { ...{ loading, size: 'small', type: 'link' } },
      '删除',
    ),
  );
};
