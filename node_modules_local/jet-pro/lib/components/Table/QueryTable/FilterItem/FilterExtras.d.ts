import type { SelectProps } from 'antd/es/select';
import type { NamePath } from 'rc-field-form/lib/interface';
import React from 'react';
import { FilterType } from '../../../../dataTypes/dynamicQuery/enums';
import type { ValueTypeBase, ValueTypeDateTime } from '../../ProTable/interface';
interface IFilterAndProps {
  name: NamePath;
  and?: boolean;
}
/**
 * 隐藏的查询项运算符type
 */
export declare const FilterAndHidden: ({ name: n, and }: IFilterAndProps) => React.JSX.Element;
interface IFilterTypeHiddenProps {
  name: NamePath;
  type: FilterType;
}
/** 隐藏的查询项操作符and */
export declare const FilterTypeHidden: ({
  name: n,
  type,
}: IFilterTypeHiddenProps) => React.JSX.Element;
interface IFilterValueTypeHiddenProps {
  name: NamePath;
  valueType?: ValueTypeBase | ValueTypeDateTime;
}
export declare const FilterValueTypeHidden: ({
  name: n,
  valueType,
}: IFilterValueTypeHiddenProps) => React.JSX.Element;
interface IFilterValueHiddenProps {
  name: NamePath;
  value?: any;
}
/** 隐藏的查询项value */
export declare const FilterValueHidden: ({
  name: n,
  value,
}: IFilterValueHiddenProps) => React.JSX.Element;
interface ITypeProps extends SelectProps<any> {
  name: NamePath;
  defaultType: FilterType;
  types: FilterType[];
  /** 【jet-pro】是否显示操作符，默认为true */
  showFilterType?: boolean;
}
/**
 * 查询操作符选择器
 * @param props
 * @returns
 */
export declare const FilterTypeSelect: (props: ITypeProps) => React.JSX.Element;
/** 查询项运算符选择器 */
export declare const FilterAndSelect: ({ name: n, and }: IFilterAndProps) => React.JSX.Element;
export {};
