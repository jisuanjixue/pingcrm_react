var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod,
  )
);
var __toCommonJS = (mod) => __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// src/components/Table/QueryTable/FilterItem/FilterExtras.tsx
var FilterExtras_exports = {};
__export(FilterExtras_exports, {
  FilterAndHidden: () => FilterAndHidden,
  FilterAndSelect: () => FilterAndSelect,
  FilterTypeHidden: () => FilterTypeHidden,
  FilterTypeSelect: () => FilterTypeSelect,
  FilterValueHidden: () => FilterValueHidden,
  FilterValueTypeHidden: () => FilterValueTypeHidden,
});
module.exports = __toCommonJS(FilterExtras_exports);
var import_pro_form = __toESM(require('@ant-design/pro-form'));
var import_antd = require('antd');
var import_react = __toESM(require('react'));
var import_enums = require('../../../../dataTypes/dynamicQuery/enums');
var FilterAndHidden = ({ name: n, and = true }) => {
  const name = n instanceof Array ? n : [n];
  return /* @__PURE__ */ import_react.default.createElement(import_pro_form.ProFormField, {
    hidden: true,
    name: [...name, 'and'],
    initialValue: and,
  });
};
var FilterTypeHidden = ({ name: n, type }) => {
  const name = n instanceof Array ? n : [n];
  return /* @__PURE__ */ import_react.default.createElement(import_pro_form.ProFormField, {
    hidden: true,
    name: [...name, 'type'],
    initialValue: type,
  });
};
var FilterValueTypeHidden = ({ name: n, valueType }) => {
  const name = n instanceof Array ? n : [n];
  return /* @__PURE__ */ import_react.default.createElement(import_pro_form.ProFormField, {
    hidden: true,
    name: [...name, 'valueType'],
    initialValue: valueType,
  });
};
var FilterValueHidden = ({ name: n, value }) => {
  const name = n instanceof Array ? n : [n];
  return /* @__PURE__ */ import_react.default.createElement(import_pro_form.ProFormField, {
    hidden: true,
    name: [...name, 'value'],
    initialValue: value,
  });
};
var FilterTypeSelect = (props) => {
  const { name: n, defaultType: dt, types, showFilterType = false, style, ...restProps } = props;
  const name = n instanceof Array ? n : [n];
  const defaultType = types.some((t) => t === dt) ? dt : types[0];
  return /* @__PURE__ */ import_react.default.createElement(
    import_pro_form.default.Item,
    { name: [...name, 'type'], initialValue: defaultType, noStyle: true },
    /* @__PURE__ */ import_react.default.createElement(
      import_antd.Select,
      {
        ...{
          ...restProps,
          style: { display: showFilterType ? '' : 'none', ...style },
        },
      },
      types.map((t) =>
        /* @__PURE__ */ import_react.default.createElement(
          import_antd.Select.Option,
          { key: t, value: t },
          import_enums.FilterTypeTip[import_enums.FilterType[t]],
        ),
      ),
    ),
  );
};
var BooleanSelect = ({ value, onChange }) =>
  /* @__PURE__ */ import_react.default.createElement(
    import_antd.Select,
    {
      ...{
        value: value ? 1 : 0,
        onChange: (val, option) => (onChange == null ? void 0 : onChange(val !== 0, option)),
        style: { width: 70 },
      },
    },
    [1, 0].map((val) =>
      /* @__PURE__ */ import_react.default.createElement(
        import_antd.Select.Option,
        { key: val, value: val },
        val === 0 ? '或' : '与',
      ),
    ),
  );
var FilterAndSelect = ({ name: n, and = true }) => {
  const name = n instanceof Array ? n : [n];
  return /* @__PURE__ */ import_react.default.createElement(
    import_pro_form.default.Item,
    { noStyle: true, name: [...name, 'and'], initialValue: and },
    /* @__PURE__ */ import_react.default.createElement(BooleanSelect, null),
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 &&
  (module.exports = {
    FilterAndHidden,
    FilterAndSelect,
    FilterTypeHidden,
    FilterTypeSelect,
    FilterValueHidden,
    FilterValueTypeHidden,
  });
