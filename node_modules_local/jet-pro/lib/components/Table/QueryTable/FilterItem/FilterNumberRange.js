var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all) __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if ((from && typeof from === 'object') || typeof from === 'function') {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,
        });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (
  (target = mod != null ? __create(__getProtoOf(mod)) : {}),
  __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule
      ? __defProp(target, 'default', { value: mod, enumerable: true })
      : target,
    mod,
  )
);
var __toCommonJS = (mod) => __copyProps(__defProp({}, '__esModule', { value: true }), mod);

// src/components/Table/QueryTable/FilterItem/FilterNumberRange.tsx
var FilterNumberRange_exports = {};
__export(FilterNumberRange_exports, {
  default: () => FilterNumberRange_default,
});
module.exports = __toCommonJS(FilterNumberRange_exports);
var import_react = __toESM(require('react'));
var import_antd = require('antd');
var import_pro_form = __toESM(require('@ant-design/pro-form'));
var import_icons = require('@ant-design/icons');
var import_enums = require('../../../../dataTypes/dynamicQuery/enums');
var import_FilterExtras = require('./FilterExtras');
var invalidate = (value) => [void 0, null, ''].some((val) => val === value);
var NumberRange = ({ name, label, defaultValue, and }) => {
  return /* @__PURE__ */ import_react.default.createElement(
    import_react.default.Fragment,
    null,
    /* @__PURE__ */ import_react.default.createElement(
      import_pro_form.default.Item,
      { shouldUpdate: true, noStyle: true },
      (form) => {
        const onBlur = () => {
          const { filters, ...filter } = form.getFieldValue(name);
          const minFilter = filters.find(
            (f) => f.type === import_enums.FilterType.GreaterThanOrEqual,
          );
          const maxFilter = filters.find((f) => f.type === import_enums.FilterType.LessThanOrEqual);
          if (
            !invalidate(minFilter == null ? void 0 : minFilter.value) &&
            !invalidate(maxFilter == null ? void 0 : maxFilter.value)
          ) {
            if (minFilter.value > maxFilter.value) {
              const temp = minFilter.value;
              minFilter.value = maxFilter.value;
              maxFilter.value = temp;
              const obj = {};
              obj[name] = { ...filter, filters: [minFilter, maxFilter] };
              form.setFieldsValue({ obj });
            }
          }
        };
        return /* @__PURE__ */ import_react.default.createElement(
          import_react.default.Fragment,
          null,
          /* @__PURE__ */ import_react.default.createElement(
            import_pro_form.default.Item,
            { ...{ name, label } },
            /* @__PURE__ */ import_react.default.createElement(
              import_antd.Input.Group,
              { compact: true },
              /* @__PURE__ */ import_react.default.createElement(
                import_pro_form.default.Item,
                {
                  noStyle: true,
                  ...{
                    name: [name, 'filters', 0, 'value'],
                    initialValue: (defaultValue || [])[0],
                  },
                },
                /* @__PURE__ */ import_react.default.createElement(import_antd.InputNumber, {
                  ...{
                    placeholder: `最小值`,
                    style: { width: 'calc(50% - 25px)', zIndex: 1 },
                    onBlur,
                  },
                }),
              ),
              /* @__PURE__ */ import_react.default.createElement(
                'span',
                {
                  className: 'ant-input ant-input-disabled',
                  style: {
                    backgroundColor: '#fff',
                    cursor: 'default',
                    width: 50,
                    textAlign: 'center',
                    zIndex: 0,
                  },
                },
                /* @__PURE__ */ import_react.default.createElement(
                  import_icons.SwapRightOutlined,
                  null,
                ),
              ),
              /* @__PURE__ */ import_react.default.createElement(
                import_pro_form.default.Item,
                {
                  noStyle: true,
                  ...{
                    name: [name, 'filters', 1, 'value'],
                    initialValue: (defaultValue || [])[1],
                  },
                },
                /* @__PURE__ */ import_react.default.createElement(import_antd.InputNumber, {
                  ...{
                    placeholder: `最大值`,
                    style: { width: 'calc(50% - 25px)', zIndex: 1 },
                    onBlur,
                  },
                }),
              ),
            ),
          ),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterTypeHidden, {
            ...{ name, type: import_enums.FilterType.Composite },
          }),
          /* @__PURE__ */ import_react.default.createElement(
            import_FilterExtras.FilterValueTypeHidden,
            { ...{ name, valueType: 'number' } },
          ),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterAndHidden, {
            ...{ name, and },
          }),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterTypeHidden, {
            ...{
              name: [name, 'filters', 0],
              type: import_enums.FilterType.GreaterThanOrEqual,
            },
          }),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterAndHidden, {
            ...{ name: [name, 'filters', 0], and },
          }),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterTypeHidden, {
            ...{
              name: [name, 'filters', 1],
              type: import_enums.FilterType.LessThanOrEqual,
            },
          }),
          /* @__PURE__ */ import_react.default.createElement(import_FilterExtras.FilterAndHidden, {
            ...{ name: [name, 'filters', 1], and },
          }),
        );
      },
    ),
  );
};
var FilterNumberRange_default = NumberRange;
