import type { FormInstance } from 'antd';
import type { Moment } from 'moment';
import type { ReactNode } from 'react';
import type { IFilter } from '../../../../dataTypes/dynamicQuery';
import type { FilterType } from '../../../../dataTypes/dynamicQuery/enums';
import type { ValueTypeBase } from '../../ProTable/interface';

declare const ValueDateTimeTypes: ['date', 'time', 'dateTime'];
type ValueDateTimeType = (typeof ValueDateTimeTypes)[number];

declare const ValueDateTimeRangeTypes: ['date_range', 'time_range', 'dateTime_range'];
type ValueDateTimeRangeType = (typeof ValueDateTimeRangeTypes)[number];

export type DateValueType = Moment | null;

export interface IFilterFormProps {
  loading?: boolean;
  form?: FormInstance<TFilterFormData>;
  onSearch?: (filters: IFilter[], isReset?: boolean) => Promise<void>;
}

export interface IFilterFormItemProps<TV> {
  name: string;
  label?: ReactNode | string;
  type?: FilterType;
  defaultValue?: TV;
  and?: boolean;
  showFilterType?: boolean;
}

export interface IFilterFormItemValue {
  type?: FilterType;
  and?: boolean;
  valueType?: ValueTypeBase | ValueDateTimeType;
}

export interface IFilterFormItemSimpleValue extends IFilterFormItemValue {
  value: any;
}
export interface IFilterFormItemCompositValue extends IFilterFormItemValue {
  filters: IFilterFormItemSimpleValue[];
}

/**
 * 【jet-pro】复杂查询表单数据结构
 */
export type TFilterFormItemCompositFormData = Record<string, IFilterFormItemCompositValue>;

/** 【jet-pro】普通查询表单数据结构 */
export type TFilterSimpleFormData = Record<string, IFilterFormItemSimpleValue>;

/**
 * 【jet-pro】查询表单数据结构
 */
export type TFilterFormData = Record<
  string,
  IFilterFormItemSimpleValue | IFilterFormItemCompositValue
>; // TFilterSimpleFormData | TFilterFormItemCompositFormData; // Record<string, IFilterFormItemValue>;
